# Spring Configuration
spring:
  application:
    name: welcome-service
  # Write dates as strings
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
  # Database & JPA Settings
  datasource:
    url: jdbc:postgresql://${database.host:localhost}:${database.port:5432}/${database.name:welcome_service}
    username: ${database.username:welcome_service_user}
    password: ${database.password:welcome_service_password}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
  # Email configuration properties
  mail:
    username: welcome@insurance-company.com
    password: password
    host: smtp.insurance-company.com
    port: 587
    debug: true
    properties:
      mail:
        smtp:
          starttls:
            enable: true
          auth: true
        transport:
          protocol: smtp
# RabbitMQ properties
  rabbitmq:
    port: 5672
    host: rabbitmq
# LiquiBase configuration
  liquibase:
    change-log: classpath:db/changelog.xml

mail-properties:
  subject: "Welcome! Your insurance policy is now active!"

# Scheduler configuration - runs every day at 22:30
delayed-calls-scheduler:
  enabled: true
  cron: "0 30 22 * * *"

# RabbitMQ properties
rabbitmq:
  queue: policy-issued
  topic-exchange: policy-issued-exchange
  routing-key: insurance.policies.#

# Web Server configuration
server:
  port: 19001
  # Requests to endpoints need to start with /welcomeservice/api
  servlet:
    context-path: /welcomeservice/api

# Logging related configuration
logging:
  file:
    path: './logs/${spring.application.name}'
    name: ${logging.file.path}/welcome-service.log.%d{yyyy-MM-dd_HH}
  level:
    root: info
    # Enable logging for transaction commit and rollback
    org.springframework.transaction.support: debug
  # Enable request logging
  request:
    log-request: true
    log-response: true
    pretty-print: false

# Swagger Documentation configuration
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  packagesToScan: org.insurance.welcomeservice.controller
  pathsToMatch: /v1/welcomecalls/**

# Health & metrics related endpoints
management:
  server:
    add-application-context-header: false
    port: 27001
  metrics:
    export:
      prometheus:
        enabled: true
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: always
      show-components: always
  endpoints:
    web:
      exposure:
        include:
          - health
          - info
          - env
          - metrics
          - prometheus